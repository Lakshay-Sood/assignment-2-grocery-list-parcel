{"version":3,"sources":["src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["console","log","myDOM","addEditSectionTitle","document","querySelector","addGroceryListBtn","form","formElement","itemName","itemQuantity","itemUnit","submitBtn","listHeadGrocery","itemCounter","list","emptyListPlaceholder","clearListBtn","groceryList","editMode","status","prevName","createListElement","name","quantity","unit","isDone","listElement","createElement","classList","add","innerHTML","getListItemTemplate","addListActionEventListeners","element","changeFormToAddNewItem","value","innerText","changeFormToEditItem","validateInput","alert","addEventListener","event","preventDefault","editItem","addItem","toggleCompleteItem","deleteItem","deleteAllItems","Number","hasOwnProperty","append","style","display","setTimeout","updateLocalStorage","newName","newQuantity","newUnit","Object","assign","remove","toggle","readLocalStorageAndPopulateDOM","localDataString","localStorage","getItem","localDataObj","JSON","parse","counter","newLocalDataObj","setItem","stringify","window","onload","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","i","length","module"],"mappings":"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","file":"src.964205e4.map","sourceRoot":"..","sourcesContent":["import './styles.scss';\n// import sayHello from './utils';\n\nconsole.log('ok!');\n// sayHello();\n\n// # 6 Step procedure:\n// ## Step 1: DOM Elements\n// ## Step 2: Global State Variables\n// ## Step 3: Helper Functions\n// ## Step 4: Event Handler Functions\n// ## Step 5: State Handlers\n// ## Step 6: Handle Local Storage (for persistence)\n\n// # Step 1: DOM Elements\n\nconst myDOM = {\n\t// ## left section\n\taddEditSectionTitle: document.querySelector('#add-edit-item > h2'),\n\taddGroceryListBtn: document.querySelector('.grocery-btn'),\n\t// addWishListBtn: document.querySelector('.wishlist-btn'),\n\tform: {\n\t\tformElement: document.querySelector('form'),\n\t\titemName: document.querySelector('#item-name'),\n\t\titemQuantity: document.querySelector('#item-quantity'),\n\t\titemUnit: document.querySelector('#item-unit'),\n\t\tsubmitBtn: document.querySelector('.grocery-btn'),\n\t},\n\t// ## right section\n\tlistHeadGrocery: document.querySelector('.list-heading > h2:nth-child(1)'),\n\t// listHeadWishlist: document.querySelector('.list-heading > h2:nth-child(2)'),\n\titemCounter: document.querySelector('#item-counter'),\n\tlist: document.querySelector('.list'),\n\temptyListPlaceholder: document.querySelector('.empty-list-placeholder'),\n\tclearListBtn: document.querySelector('#clear-btn'),\n};\n\n// # Step 2: Global State Variables\n/**\n * will hold all list items with their data and reference to DOM node (for faster access)\n * example => groceryList = {\n *  'Banana': {\n *    quantity: 2,\n *    unit: 'dozen',\n *    isDone: false,\n *    element: DOM_element reference\n *  }\n * }\n */\nlet groceryList = {};\n\n/**\n * to check if form is in add or edit mode\n * and stores original name of the product if its in edit mode\n */\nlet editMode = {\n\tstatus: false,\n\tprevName: '',\n};\n\n// # Step 3: Helper Functions\n\n/**\n * Creates a new DOM element (to append in the grocery list)\n * @param {string} name Item name\n * @param {number} quantity Item quatity (could be string as well)\n * @param {string} unit Unit in which item is measured\n * @param {Boolean} isDone If item has been bought but still wants to keep in the list\n * @returns DOM_Element\n */\nconst createListElement = (name, quantity, unit, isDone) => {\n\tlet listElement = document.createElement('li');\n\tif (isDone) listElement.classList.add('done-overlay');\n\tlistElement.innerHTML = getListItemTemplate(name, quantity, unit);\n\taddListActionEventListeners(listElement, name);\n\n\tgroceryList[name] = {\n\t\tquantity,\n\t\tunit,\n\t\telement: listElement,\n\t\tisDone,\n\t};\n\treturn listElement;\n};\n\n/**\n * Returns HTML template string; to be inserted into new DOM element\n * @param {string} name Item name\n * @param {number} quantity Item quatity (could be string as well)\n * @param {string} unit Unit in which item is measured\n * @returns HTML_template_string\n */\nconst getListItemTemplate = (name, quantity, unit) => {\n\treturn `<span class=\"list-item\">\n\t<span class=\"list-item-name\">${name}</span><span class=\"quantity-unit\">${quantity} ${unit}</span>\n</span>\n\t<!-- ! add icons -->\n\t<span class=\"list-action\">\n\t<span class=\"done-btn\">Done</span>\n\t<span class=\"edit-btn\">Edit</span>\n\t<span class=\"del-btn\">Del</span>\n\t</span>\n`;\n};\n\n/**\n * clears all the input fields and changes button and titles back to original ones (if they were changed due to 'Edit' option)\n */\nconst changeFormToAddNewItem = () => {\n\teditMode.status = false;\n\t// myDOM.form.formElement.setAttribute('onsubmit', 'addItem(event)');\n\tmyDOM.form.itemName.value = '';\n\tmyDOM.form.itemQuantity.value = '';\n\tmyDOM.form.itemUnit.value = 'not-selected';\n\tmyDOM.addEditSectionTitle.innerText = 'Add Item';\n\tmyDOM.addGroceryListBtn.innerText = 'Add to Grocery List';\n\t// myDOM.addWishListBtn.innerText = 'Add to Wishlist';\n};\n\n/**\n * function for onClick on 'Edit' button for list items\n * populates the form fields with data of selected item\n * @param {string} name ItemName, acts as a key\n */\nconst changeFormToEditItem = (name) => {\n\tmyDOM.addEditSectionTitle.innerText = 'Edit Item';\n\tmyDOM.addGroceryListBtn.innerText = 'Save to Grocery List';\n\n\t// populating with item data\n\tmyDOM.form.itemName.value = name;\n\tmyDOM.form.itemQuantity.value = groceryList[name].quantity;\n\tmyDOM.form.itemUnit.value = groceryList[name].unit;\n\n\teditMode.status = true;\n\teditMode.prevName = name;\n\t// myDOM.form.formElement.setAttribute('onsubmit', `editItem(event, '${name}')`);\n};\n\n/**\n * Gives an alert in case the input is not in proper format\n * @returns boolean true if input is validated and false if there is an error\n */\nconst validateInput = () => {\n\tconst itemName = myDOM.form.itemName.value;\n\tconst itemQuantity = myDOM.form.itemQuantity.value;\n\tconst itemUnit = myDOM.form.itemUnit.value;\n\n\tif (itemName === '') {\n\t\talert('Item name can not be empty!');\n\t\treturn false;\n\t} else if (itemQuantity <= 0) {\n\t\talert('Item quantity must be greater than 1');\n\t\treturn false;\n\t} else if (itemUnit === 'not-selected') {\n\t\talert('Please select unit for your item');\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n// # Step 4: Event Handler Functions\n\n/**\n * event listener for form submission\n * based on the state of the app, it calls addItem() or editItem()\n */\n// myDOM.form.formElement.addEventListener('submit', (event) => {\nmyDOM.form.submitBtn.addEventListener('click', (event) => {\n\tconsole.log('from submit');\n\tevent.preventDefault();\n\tif (editMode.status === true) {\n\t\teditItem(editMode.prevName);\n\t} else {\n\t\taddItem();\n\t}\n});\n\n/**\n * helper function for 'createListElement()' to add event listeners\n * @param {DOM_Element} listElement newly created 'li' element so that its buttons could get event listeners\n * @param {string} name ItemName, that acts as key for event handlers\n */\nconst addListActionEventListeners = (listElement, name) => {\n\tlistElement.querySelector('.done-btn').addEventListener('click', () => {\n\t\ttoggleCompleteItem(name);\n\t});\n\tlistElement.querySelector('.edit-btn').addEventListener('click', () => {\n\t\tchangeFormToEditItem(name);\n\t});\n\tlistElement.querySelector('.del-btn').addEventListener('click', () => {\n\t\tdeleteItem(name);\n\t});\n};\n\n/**\n * event listen to clear the grocery list\n */\nmyDOM.clearListBtn.addEventListener('click', () => {\n\tdeleteAllItems();\n});\n\n// # Step 5: State Handlers\n\n/**\n * Appends (increments) items based on the form data\n * @param {DOM_event} event onClick event when user wants to add a new item to the list\n */\nconst addItem = () => {\n\t// if (event) event.preventDefault();\n\tif (!validateInput()) {\n\t\treturn;\n\t}\n\n\tconst name = myDOM.form.itemName.value;\n\tlet quantity = myDOM.form.itemQuantity.value;\n\tconst unit = myDOM.form.itemUnit.value;\n\tquantity = Number(quantity);\n\tif (groceryList.hasOwnProperty(name)) {\n\t\tgroceryList[name].quantity += quantity;\n\t\tgroceryList[name].unit = unit;\n\t\tgroceryList[name].element.querySelector('.quantity-unit').innerText =\n\t\t\tgroceryList[name].quantity + ' ' + unit;\n\t} else {\n\t\tmyDOM.list.append(createListElement(name, quantity, unit));\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\t}\n\tif (Number(myDOM.itemCounter.innerText) !== 0)\n\t\tmyDOM.emptyListPlaceholder.style.display = 'none';\n\tchangeFormToAddNewItem();\n\n\t// console.log('addItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * Edits list item based on form data and original key (itemName) of the list element\n * Edits list item based on form data and original key (itemName) of the list element\n * @param {DOM_event} event onClick event when user edits a list item\n * @param {string} prevName Name of original list item which is being edited (helps to check if item is being edited or replaced)\n */\nconst editItem = (prevName) => {\n\tif (!validateInput()) {\n\t\treturn;\n\t}\n\n\tconst newName = myDOM.form.itemName.value;\n\tconst newQuantity = myDOM.form.itemQuantity.value;\n\tconst newUnit = myDOM.form.itemUnit.value;\n\n\tif (newName !== prevName) {\n\t\tif (groceryList[newName]) {\n\t\t\taddItem();\n\t\t\tdeleteItem(prevName);\n\n\t\t\t// console.log('editItem: ', { groceryList });\n\t\t\tsetTimeout(updateLocalStorage, 0);\n\t\t\treturn;\n\t\t}\n\t\t// groceryList[newName] = { ...groceryList[prevName] };\n\t\tgroceryList[newName] = Object.assign(groceryList[prevName]);\n\t\tdelete groceryList[prevName];\n\t\t// myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\t}\n\tgroceryList[newName].quantity = Number(newQuantity);\n\tgroceryList[newName].unit = newUnit;\n\tgroceryList[newName].element.innerHTML = getListItemTemplate(\n\t\tnewName,\n\t\tnewQuantity,\n\t\tnewUnit\n\t);\n\taddListActionEventListeners(groceryList[newName].element, newName);\n\t// myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\n\t// console.log('editItem: ', { groceryList });\n\tchangeFormToAddNewItem();\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * Delete the item with given name (as name is unique)\n * @param {string} name Item name, use as key to delete item from the HTML list and global state variable\n */\nconst deleteItem = (name) => {\n\t// because counter has been already reduced for 'done' list items\n\tif (!groceryList[name].isDone)\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\tgroceryList[name].element.remove();\n\tdelete groceryList[name];\n\tif (Number(myDOM.itemCounter.innerText) === 0)\n\t\tmyDOM.emptyListPlaceholder.style.display = 'block';\n\tchangeFormToAddNewItem();\n\n\t// console.log('deleteItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * Delete all items in the grocery list (and from the DOM as well)\n */\nconst deleteAllItems = () => {\n\tfor (let itemName in groceryList) {\n\t\tdeleteItem(itemName);\n\t}\n};\n\n/**\n * function for onClick on 'Done' button for list items\n * @param {string} name ItemName, acts as the key\n */\nconst toggleCompleteItem = (name) => {\n\t// console.log(groceryList[name].element);\n\tgroceryList[name].element.classList.toggle('done-overlay');\n\tgroceryList[name].isDone = !groceryList[name].isDone;\n\tif (groceryList[name].isDone)\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\telse myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\n\t// console.log('toggleCompleteItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n// # Step 6: Handle Local Storage (for persistence)\n\n/**\n * NOT using this because its not a reliabe event\n * this event is fired when the window​, the document and its resources are about to be unloaded\n * thus, this is when we save our state (list items) onto local storage for persistence\n */\n// window.onbeforeunload = () => {\n// \tconsole.log('beforeunload: ', { groceryList });\n// \tsetTimeout(updateLocalStorage, 0);\n\n// localStorage.setItem('groceryList', JSON.stringify(newLocalDataObj));\n// };\n\n/**\n * Reads our groceryList from local storage and then populate the DOM list with the data\n */\nconst readLocalStorageAndPopulateDOM = () => {\n\tconst localDataString = localStorage.getItem('groceryList');\n\tconst localDataObj = JSON.parse(localDataString);\n\t// this obj will look something like this\n\t// const localDataObj = {\n\t// \t'Urad Dal': {\n\t// \t\tquantity: 500,\n\t// \t\tunit: 'gm',\n\t// \t\tisDone: false,\n\t// \t},\n\t// \t'Banana': {\n\t// \t\tquantity: 2,\n\t// \t\tunit: 'dozen',\n\t// \t\tisDone: true,\n\t// \t},\n\t// \t'Water Bottle': {\n\t// \t\tquantity: 6,\n\t// \t\tunit: 'nos.',\n\t// \t\tisDone: false,\n\t// \t},\n\t// \t'Toned Milk': {\n\t// \t\tquantity: 2,\n\t// \t\tunit: 'L',\n\t// \t\tisDone: false,\n\t// \t},\n\t// };\n\n\t// no local storage key found\n\tif (!localDataObj) {\n\t\tgroceryList = {};\n\t\tmyDOM.itemCounter.innerText = 0;\n\t}\n\n\t// counter to count total items in the list\n\tlet counter = 0;\n\tgroceryList = {};\n\tfor (let itemName in localDataObj) {\n\t\tmyDOM.list.append(\n\t\t\tcreateListElement(\n\t\t\t\titemName,\n\t\t\t\tlocalDataObj[itemName].quantity,\n\t\t\t\tlocalDataObj[itemName].unit,\n\t\t\t\tlocalDataObj[itemName].isDone\n\t\t\t)\n\t\t);\n\t\tcounter++;\n\t}\n\tmyDOM.itemCounter.innerText = counter;\n\tif (counter > 0) myDOM.emptyListPlaceholder.style.display = 'none';\n\n\t// console.log('onLoad: ', { groceryList });\n};\n\n/**\n * save our state (grocery list items) onto local storage for persistence\n * it is called after each alteration in the groceryList object (because window.onbeforeunload is not always reliable)\n */\nconst updateLocalStorage = () => {\n\tconst newLocalDataObj = {};\n\tfor (let itemName in groceryList) {\n\t\tnewLocalDataObj[itemName] = {\n\t\t\tquantity: Number(groceryList[itemName].quantity),\n\t\t\tunit: groceryList[itemName].unit,\n\t\t\tisDone: groceryList[itemName].isDone,\n\t\t};\n\t}\n\n\tlocalStorage.setItem('groceryList', JSON.stringify(newLocalDataObj));\n};\n\n/**\n * this event is fired when the browser load this object\n * thus, this is when we call our state (list items) from local storage into global state variable\n */\nwindow.onload = readLocalStorageAndPopulateDOM;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}