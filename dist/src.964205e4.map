{"version":3,"sources":["src/utils.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["sayHello","alert","console","log","myDOM","addEditSectionTitle","document","querySelector","addGroceryListBtn","form","formElement","itemName","itemQuantity","itemUnit","submitBtn","listHeadGrocery","itemCounter","list","emptyListPlaceholder","groceryList","editMode","status","prevName","createListElement","name","quantity","unit","isDone","listElement","createElement","classList","add","innerHTML","getListItemTemplate","addListActionEventListeners","element","addEventListener","toggleCompleteItem","changeFormToEditItem","deleteItem","changeFormToAddNewItem","value","innerText","validateInput","event","preventDefault","editItem","addItem","deleteAllItems","Number","hasOwnProperty","append","style","display","setTimeout","updateLocalStorage","newName","newQuantity","newUnit","Object","assign","remove","toggle","readLocalStorageAndPopulateDOM","localDataString","localStorage","getItem","localDataObj","JSON","parse","counter","newLocalDataObj","setItem","stringify","window","onload","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","i","length","module"],"mappings":"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","file":"src.964205e4.map","sourceRoot":"..","sourcesContent":["export default function sayHello() {\n\talert('hello');\n}\n","import './styles.scss';\nimport sayHello from './utils';\n\nconsole.log('ok!');\n// sayHello();\n\n// import { createListElement } from './utils';\n\n// # Step 1: DOM Elements\n\nconst myDOM = {\n\t// ## left section\n\taddEditSectionTitle: document.querySelector('#add-edit-item > h2'),\n\taddGroceryListBtn: document.querySelector('.grocery-btn'),\n\t// addWishListBtn: document.querySelector('.wishlist-btn'),\n\tform: {\n\t\tformElement: document.querySelector('form'),\n\t\titemName: document.querySelector('#item-name'),\n\t\titemQuantity: document.querySelector('#item-quantity'),\n\t\titemUnit: document.querySelector('#item-unit'),\n\t\tsubmitBtn: document.querySelector('.grocery-btn'),\n\t},\n\t// ## right section\n\tlistHeadGrocery: document.querySelector('.list-heading > h2:nth-child(1)'),\n\t// listHeadWishlist: document.querySelector('.list-heading > h2:nth-child(2)'),\n\titemCounter: document.querySelector('#item-counter'),\n\tlist: document.querySelector('.list'),\n\temptyListPlaceholder: document.querySelector('.empty-list-placeholder'),\n};\n\n// # Step 2: Global State Variables\n/**\n * will hold all list items with their data and reference to DOM node (for faster access)\n */\nlet groceryList = {};\nlet editMode = {\n\tstatus: false,\n\tprevName: '',\n};\n\n// # Step 3: Helper Functions\n\n/**\n * Creates a new DOM element (to append in the grocery list)\n * @param {string} name Item name\n * @param {number} quantity Item quatity (could be string as well)\n * @param {string} unit Unit in which item is measured\n * @param {Boolean} isDone If item has been bought but still wants to keep in the list\n * @returns DOM_Element\n */\nconst createListElement = (name, quantity, unit, isDone) => {\n\tlet listElement = document.createElement('li');\n\tif (isDone) listElement.classList.add('done-overlay');\n\tlistElement.innerHTML = getListItemTemplate(name, quantity, unit);\n\taddListActionEventListeners(listElement, name);\n\n\tgroceryList[name] = {\n\t\tquantity,\n\t\tunit,\n\t\telement: listElement,\n\t\tisDone,\n\t};\n\treturn listElement;\n};\n\nconst addListActionEventListeners = (listElement, name) => {\n\tlistElement.querySelector('.done-btn').addEventListener('click', () => {\n\t\ttoggleCompleteItem(name);\n\t});\n\tlistElement.querySelector('.edit-btn').addEventListener('click', () => {\n\t\tchangeFormToEditItem(name);\n\t});\n\tlistElement.querySelector('.del-btn').addEventListener('click', () => {\n\t\tdeleteItem(name);\n\t});\n};\n\n/**\n * Returns HTML template string; to be inserted into new DOM element\n * @param {string} name Item name\n * @param {number} quantity Item quatity (could be string as well)\n * @param {string} unit Unit in which item is measured\n * @returns HTML_template_string\n */\nconst getListItemTemplate = (name, quantity, unit) => {\n\treturn `<span class=\"list-item\">\n\t<span class=\"list-item-name\">${name}</span><span class=\"quantity-unit\">${quantity} ${unit}</span>\n</span>\n\t<!-- ! add icons -->\n\t<span class=\"list-action\">\n\t<span class=\"done-btn\">Done</span>\n\t<span class=\"edit-btn\">Edit</span>\n\t<span class=\"del-btn\">Del</span>\n\t</span>\n`;\n};\n\n/**\n * clears all the input fields and changes button and titles back to original ones (if they were changed due to 'Edit' option)\n */\nconst changeFormToAddNewItem = () => {\n\teditMode.status = false;\n\t// myDOM.form.formElement.setAttribute('onsubmit', 'addItem(event)');\n\tmyDOM.form.itemName.value = '';\n\tmyDOM.form.itemQuantity.value = '';\n\tmyDOM.form.itemUnit.value = 'not-selected';\n\tmyDOM.addEditSectionTitle.innerText = 'Add Item';\n\tmyDOM.addGroceryListBtn.innerText = 'Add to Grocery List';\n\t// myDOM.addWishListBtn.innerText = 'Add to Wishlist';\n};\n\n/**\n * function for onClick on 'Edit' button for list items\n * populates the form fields with data of selected item\n * @param {string} name ItemName, acts as a key\n */\nconst changeFormToEditItem = (name) => {\n\tmyDOM.addEditSectionTitle.innerText = 'Edit Item';\n\tmyDOM.addGroceryListBtn.innerText = 'Save to Grocery List';\n\n\t// populating with item data\n\tmyDOM.form.itemName.value = name;\n\tmyDOM.form.itemQuantity.value = groceryList[name].quantity;\n\tmyDOM.form.itemUnit.value = groceryList[name].unit;\n\n\teditMode.status = true;\n\teditMode.prevName = name;\n\t// myDOM.form.formElement.setAttribute('onsubmit', `editItem(event, '${name}')`);\n};\n\n/**\n * Gives an alert in case the input is not in proper format\n * @returns boolean true if input is validated and false if there is an error\n */\nconst validateInput = () => {\n\tconst itemName = myDOM.form.itemName.value;\n\tconst itemQuantity = myDOM.form.itemQuantity.value;\n\tconst itemUnit = myDOM.form.itemUnit.value;\n\n\tif (itemName === '') {\n\t\talert('Item name can not be empty!');\n\t\treturn false;\n\t} else if (itemQuantity <= 0) {\n\t\talert('Item quantity must be greater than 1');\n\t\treturn false;\n\t} else if (itemUnit === 'not-selected') {\n\t\talert('Please select unit for your item');\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n// # Step 4: Event Handler Functions\n\n// myDOM.form.formElement.addEventListener('submit', (event) => {\nmyDOM.form.submitBtn.addEventListener('click', (event) => {\n\tconsole.log('from submit');\n\tevent.preventDefault();\n\tif (editMode.status === true) {\n\t\teditItem(editMode.prevName);\n\t} else {\n\t\taddItem();\n\t}\n});\n\ndocument.querySelector('#clear-btn').addEventListener('click', () => {\n\tdeleteAllItems();\n});\n\n/**\n * Appends (increments) items based on the form data\n * @param {DOM_event} event onClick event when user wants to add a new item to the list\n */\nconst addItem = () => {\n\tif (event) event.preventDefault();\n\tif (!validateInput()) {\n\t\treturn;\n\t}\n\n\tconst name = myDOM.form.itemName.value;\n\tlet quantity = myDOM.form.itemQuantity.value;\n\tconst unit = myDOM.form.itemUnit.value;\n\tquantity = Number(quantity);\n\tif (groceryList.hasOwnProperty(name)) {\n\t\tgroceryList[name].quantity += quantity;\n\t\tgroceryList[name].unit = unit;\n\t\tgroceryList[name].element.querySelector('.quantity-unit').innerText =\n\t\t\tgroceryList[name].quantity + ' ' + unit;\n\t} else {\n\t\tmyDOM.list.append(createListElement(name, quantity, unit));\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\t}\n\tif (Number(myDOM.itemCounter.innerText) !== 0)\n\t\tmyDOM.emptyListPlaceholder.style.display = 'none';\n\tchangeFormToAddNewItem();\n\n\t// console.log('addItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * Edits list item based on form data and original key (itemName) of the list element\n * Edits list item based on form data and original key (itemName) of the list element\n * @param {DOM_event} event onClick event when user edits a list item\n * @param {string} prevName Name of original list item which is being edited (helps to check if item is being edited or replaced)\n */\nconst editItem = (prevName) => {\n\tif (!validateInput()) {\n\t\treturn;\n\t}\n\n\tconst newName = myDOM.form.itemName.value;\n\tconst newQuantity = myDOM.form.itemQuantity.value;\n\tconst newUnit = myDOM.form.itemUnit.value;\n\n\tif (newName !== prevName) {\n\t\tif (groceryList[newName]) {\n\t\t\taddItem();\n\t\t\tdeleteItem(prevName);\n\n\t\t\t// console.log('editItem: ', { groceryList });\n\t\t\tsetTimeout(updateLocalStorage, 0);\n\t\t\treturn;\n\t\t}\n\t\t// groceryList[newName] = { ...groceryList[prevName] };\n\t\tgroceryList[newName] = Object.assign(groceryList[prevName]);\n\t\tdelete groceryList[prevName];\n\t\t// myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\t}\n\tgroceryList[newName].quantity = Number(newQuantity);\n\tgroceryList[newName].unit = newUnit;\n\tgroceryList[newName].element.innerHTML = getListItemTemplate(\n\t\tnewName,\n\t\tnewQuantity,\n\t\tnewUnit\n\t);\n\taddListActionEventListeners(groceryList[newName].element, newName);\n\t// myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\n\t// console.log('editItem: ', { groceryList });\n\n\tchangeFormToAddNewItem();\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * Delete the item with given name (as name is unique)\n * @param {string} name Item name, use as key to delete item from the HTML list and global state variable\n */\nconst deleteItem = (name) => {\n\t// because counter has been already reduced for 'done' list items\n\tif (!groceryList[name].isDone)\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\tgroceryList[name].element.remove();\n\tdelete groceryList[name];\n\tif (Number(myDOM.itemCounter.innerText) === 0)\n\t\tmyDOM.emptyListPlaceholder.style.display = 'block';\n\tchangeFormToAddNewItem();\n\n\t// console.log('deleteItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\nconst deleteAllItems = () => {\n\tfor (let itemName in groceryList) {\n\t\tdeleteItem(itemName);\n\t}\n};\n\n/**\n * function for onClick on 'Done' button for list items\n * @param {string} name ItemName, acts as the key\n */\nconst toggleCompleteItem = (name) => {\n\t// console.log(groceryList[name].element);\n\tgroceryList[name].element.classList.toggle('done-overlay');\n\tgroceryList[name].isDone = !groceryList[name].isDone;\n\tif (groceryList[name].isDone)\n\t\tmyDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) - 1;\n\telse myDOM.itemCounter.innerText = Number(myDOM.itemCounter.innerText) + 1;\n\n\t// console.log('toggleCompleteItem: ', { groceryList });\n\tsetTimeout(updateLocalStorage, 0);\n};\n\n/**\n * this event is fired when the window​, the document and its resources are about to be unloaded\n * thus, this is when we save our state (list items) onto local storage for persistence\n */\n// window.onbeforeunload = () => {\n// \tconsole.log('beforeunload: ', { groceryList });\n\n// \tsetTimeout(updateLocalStorage, 0);\n// const newLocalDataObj = {};\n// const itemNameEle = document.querySelectorAll('.list-item-name');\n// itemNameEle.forEach((ele) => {\n// \tnewLocalDataObj[ele.innerText] = {\n// \t\tquantity: Number(groceryList[ele.innerText].quantity),\n// \t\tunit: groceryList[ele.innerText].unit,\n// \t\tisDone: groceryList[ele.innerText].isDone,\n// \t};\n// });\n\n// localStorage.setItem('groceryList', JSON.stringify(newLocalDataObj));\n// };\n\n// # Step 5: Handle Local Storage (for persistence)\n\n/**\n * Reads our groceryList from local storage and then populate the DOM list with the data\n */\nconst readLocalStorageAndPopulateDOM = () => {\n\tconst localDataString = localStorage.getItem('groceryList');\n\tconst localDataObj = JSON.parse(localDataString);\n\t// this obj will look something like this\n\t// const localDataObj = {\n\t// \t'Urad Dal': {\n\t// \t\tquantity: 500,\n\t// \t\tunit: 'gm',\n\t// \t\tisDone: false,\n\t// \t},\n\t// \t'Banana': {\n\t// \t\tquantity: 2,\n\t// \t\tunit: 'dozen',\n\t// \t\tisDone: true,\n\t// \t},\n\t// \t'Water Bottle': {\n\t// \t\tquantity: 6,\n\t// \t\tunit: 'nos.',\n\t// \t\tisDone: false,\n\t// \t},\n\t// \t'Toned Milk': {\n\t// \t\tquantity: 2,\n\t// \t\tunit: 'L',\n\t// \t\tisDone: false,\n\t// \t},\n\t// };\n\n\t// no local storage key found\n\tif (!localDataObj) {\n\t\tgroceryList = {};\n\t\tmyDOM.itemCounter.innerText = 0;\n\t}\n\n\t// counter to count total items in the list\n\tlet counter = 0;\n\tgroceryList = {};\n\tfor (let itemName in localDataObj) {\n\t\tmyDOM.list.append(\n\t\t\tcreateListElement(\n\t\t\t\titemName,\n\t\t\t\tlocalDataObj[itemName].quantity,\n\t\t\t\tlocalDataObj[itemName].unit,\n\t\t\t\tlocalDataObj[itemName].isDone\n\t\t\t)\n\t\t);\n\t\tcounter++;\n\t}\n\tmyDOM.itemCounter.innerText = counter;\n\tif (counter > 0) myDOM.emptyListPlaceholder.style.display = 'none';\n\n\t// console.log('onLoad: ', { groceryList });\n};\n\n/**\n * save our state (grocery list items) onto local storage for persistence\n * it is called after each alteration in the groceryList object (because window.onbeforeunload is not always reliable)\n */\nconst updateLocalStorage = () => {\n\tconst newLocalDataObj = {};\n\tfor (let itemName in groceryList) {\n\t\tnewLocalDataObj[itemName] = {\n\t\t\tquantity: Number(groceryList[itemName].quantity),\n\t\t\tunit: groceryList[itemName].unit,\n\t\t\tisDone: groceryList[itemName].isDone,\n\t\t};\n\t}\n\n\tlocalStorage.setItem('groceryList', JSON.stringify(newLocalDataObj));\n};\n\n/**\n * this event is fired when the browser load this object\n * thus, this is when we call our state (list items) from local storage into global state variable\n */\nwindow.onload = readLocalStorageAndPopulateDOM;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}